{"mappings":"ikCAOwBA,EAAAA,GAEpB,IAAIC,EAAM,MAKV,OAJgB,MAAZD,IAEFC,GAAO,IAAMD,GAERC,WAGWA,EAAAA,GAKlB,OADAA,GADAA,GADAA,EAAMA,EAAIC,QAAJ,SAAqB,KACjBC,MAAM,MACNC,KAAK,cAKFC,EAAAA,GAEb,IAAIC,EAAgBD,EAAOE,MAAP,WAMpB,OALqB,MAAjBD,IAEFA,EAAaE,EAAGC,KAAHC,EAAAC,GAAAC,KAAGH,KAAyBH,EAAcO,aAErCC,OAAMN,EAACC,KAADM,EAAAC,GAAAJ,KAACH,KAA2BH,aAKxDW,IAEE,IADA,IAAIC,EAAO,EACFC,EAAW,EAAGA,EAAWV,KAAKW,eAAeC,OAAQF,IAC9D,CACE,IAAIG,EAAMC,SAASd,KAAKW,eAAeD,KAClCK,MAAMF,IAAQA,EAAM,MAEvBJ,GAAQI,GAGZ,OAAOJ,EAYIO,IAAAA,EA5DTA,oBAGJA,iGAAaC,CAAAjB,KAAAgB,GAAAE,EAAAlB,KAAAmB,GAAAD,EAAAlB,KAAAoB,GAAAF,EAAAlB,KAAAC,GAAAiB,EAAAlB,KAAAM,yCAgDbe,MAAA,SAAMzB,GACJ,IAAI0B,EAAKvB,EAAGC,KAAHoB,EAAAG,GAAApB,KAAGH,KAAoBJ,GAIhC,OAHAA,EAASA,EAAOH,QAAP,UAAyB,IAClCO,KAAKW,eAAiBf,EAAOF,MAAM4B,GAC5BvB,EAAGC,KAAHmB,EAAAX,GAAAL,KAAGH,2FAvDRgB,0BCAN,MAAAQ,KAAAC,EAAA,sCAEA,IAAM7B,EAAS8B,SAASC,cAAc,WAChCC,EAAOF,SAASC,cAAc,eAC9BE,EAAMH,SAASC,cAAc,kBAEnCC,EAAKE,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBACNH,EAAII,UAAY,OAAA,EAAQT,EAAA,SAAa5B,EAAOyB,MAAMjB,YAAc","sources":["src/sumador_cadena.js","src/presenter.js"],"sourcesContent":["class CalculadoraCadena\n{\n\n  constructor(){\n    let arrayDeNumeros = [];\n  }\n\n  #concatenarDelimiters(strRegex)\n  {\n    let str = \",|-\"\n    if (strRegex != null)\n    {\n      str += \"|\" + strRegex;\n    }\n    return str;\n  }\n\n  #modificarDelimiter(str)\n  {\n    str = str.replace(/\\[|\\]/g,\"\");\n    str = str.split(\" \");\n    str = str.join(\"|\");\n    return str;\n  }\n\n\n  #getDelimiters(cadena)\n  {\n    let strDelimiters = cadena.match(/\\[.*\\]/g);\n    if (strDelimiters != null)\n    {\n      strDelimiters = this.#modificarDelimiter(strDelimiters.toString());\n    }\n    let delimitadores = RegExp(this.#concatenarDelimiters(strDelimiters));\n    return delimitadores;\n  }\n\n  #sumarArray()\n  {\n    let suma = 0;\n    for (let contador = 0; contador < this.arrayDeNumeros.length; contador++)\n    {\n      let num = parseInt(this.arrayDeNumeros[contador]);\n      if (!isNaN(num) && num < 1000)\n      {\n        suma += num;\n      }\n    }\n    return suma;\n  }\n\n  sumar(cadena) {\n    let regex = this.#getDelimiters(cadena);\n    cadena = cadena.replace(/\\[.*\\]/g,\"\");\n    this.arrayDeNumeros = cadena.split(regex);\n    let sum = this.#sumarArray();\n    return sum;\n  }\n\n}\nexport default CalculadoraCadena;","import sumar_cadena from \"./sumador_cadena.js\"\n\nconst cadena = document.querySelector(\"#cadena\");\nconst form = document.querySelector(\"#sumar-form\");\nconst div = document.querySelector(\"#resultado-div\");\n\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  div.innerHTML = \"<p>\" + sumar_cadena(cadena.value.toString()) + \"</p>\";\n});\n"],"names":["strRegex","str","replace","split","join","cadena","strDelimiters","match","$77d16d67983df8b6$var$_classPrivateMethodGet","this","$77d16d67983df8b6$var$_modificarDelimiter","$77d16d67983df8b6$var$_modificarDelimiter2","call","toString","RegExp","$77d16d67983df8b6$var$_concatenarDelimiters","$77d16d67983df8b6$var$_concatenarDelimiters2","$77d16d67983df8b6$var$_sumarArray2","suma","contador","arrayDeNumeros","length","num","parseInt","isNaN","CalculadoraCadena","$77d16d67983df8b6$var$_classCallCheck","$77d16d67983df8b6$var$_classPrivateMethodInitSpec","$77d16d67983df8b6$var$_sumarArray","$77d16d67983df8b6$var$_getDelimiters","value","regex","$77d16d67983df8b6$var$_getDelimiters2","$89b0829c857563b6$var$_sumador_cadena","parcelRequire","document","querySelector","form","div","addEventListener","event","preventDefault","innerHTML"],"version":3,"file":"index.a541b77f.js.map"}